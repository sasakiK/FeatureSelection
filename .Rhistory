#列について
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day<-(colnames(df[i,j]))
cat(colnames(df[i,j]),"\n")
break
}
}
}
return(df)
}
t <- chage_format(kaisu2)
t
kaisu2
#------kaisu01→01　kaisu02→02に変換する
chage_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day<- colnames(df[i,j])
cat(colnames(df[i,j]),"\n")
break
}
}
}
return(df)
}
t <- chage_format(kaisu2)
t
#------kaisu01→01　kaisu02→02に変換する
chage_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i,j]<- colnames(df[i,j])
cat(colnames(df[i,j]),"\n")
break
}
}
}
return(df)
}
#------kaisu01→01　kaisu02→02に変換する
chage_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[j]<- colnames(df[i,j])
cat(colnames(df[i,j]),"\n")
break
}
}
}
return(df)
}
t <- chage_format(kaisu2)
t
kaisu2$himoID[2]
kaisu2$himoID[3]
#------kaisu01→01　kaisu02→02に変換する
chage_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- colnames(df[i,j])
cat(colnames(df[i,j]),"\n")
break
}
}
}
return(df)
}
t <- chage_format(kaisu2)
t
strsplit("kaisu01")
strsplit("kaisu01","su")
strsplit("kaisu01","su")[2]
strsplit("kaisu01","su")[1]
strsplit("kaisu01","su")[1,2]
strsplit("kaisu01","su")[1,1]
strsplit("kaisu01","su")[[1]]
strsplit("kaisu01","su")[[1,1]]
strsplit("kaisu01","su")[[1],[1]]
strsplit("kaisu01","su")[[1]]
strsplit("kaisu01","su")[[1]][1]
strsplit("kaisu01","su")[[1]][2]
#------kaisu01→01　kaisu02→02に変換する
chage_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
}
}
return(df)
}
t <- chage_format(kaisu2)
t
paste("1"+"a")
paste("1"+"01")
paste("a","01")
#------kaisu01→01　kaisu02→02に変換する
chage_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
}
}
df$start_day <- paste(df$sinryonengetu,df$start_day)
return(df)
}
t <- chage_format(kaisu2)
t
#------kaisu01→01　kaisu02→02に変換する
chage_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
}
}
df$start_day <- paste(df$sinryonengetu,df$start_day,sep = "")
return(df)
}
t <- chage_format(kaisu2)
t
i <- c(1,2,3,4,5)
for (i in 1:5) {
print(i)
}
i <- c(1,2,3,4,5)
for (i in -5:-1) {
print(i)
}
i[1]
i <- c(1,2,3,4,5)
for (k in -5:1) {
print(i)
}
i
i[1]
i[2]
i <- c(1,2,3,4,5)
for (k in -5:1) {
print(i[k])
}
i
for (k in 1:2) {
print(i[k])
}
for (k in -1:2) {
print(i[k])
}
for (k in -1:-2) {
print(i[k])
}
for (-k in 1:5) {
print(i[k])
}
for (k in 1:5) {
print(i[-k])
}
i[-1]
kaisu[-1,1]
kaisu
kaisu[1,-1]
kaisu[1,-2]
for (k in 1:5) {
print(k)
}
for (k in 5:1) {
print(k)
}
#ID,sinryonengetuがユニークになっている(kaisuが日ごとに足されているデータ)
#------kaisu01→01　kaisu02→02に変換する
chage_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について 月ごとのStartdayを特定
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
#列について 月ごとのEnddayを特定
for (j in index_e:index_s) {
if (df[i,j]==1) {
df$end_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
}
}
}
df$start_day <- paste(df$sinryonengetu,df$start_day,sep = "")
df$end_day   <- paste(df$sinryonengetu,df$end_day,sep = "")
return(df)
}
#ID,sinryonengetuがユニークになっている(kaisuが日ごとに足されているデータ)
#------kaisu01→01　kaisu02→02に変換する
change_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について 月ごとのStartdayを特定
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
#列について 月ごとのEnddayを特定
for (j in index_e:index_s) {
if (df[i,j]==1) {
df$end_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
}
}
}
df$start_day <- paste(df$sinryonengetu,df$start_day,sep = "")
df$end_day   <- paste(df$sinryonengetu,df$end_day,sep = "")
return(df)
}
t <- change_format(kaisu2)
t
change_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について 月ごとのStartdayを特定
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
#列について 月ごとのEnddayを特定
for (k in index_e:index_s) {
if (df[i,k]==1) {
df$end_day[i]<- strsplit(colnames(df[i,k]),"su")[[1]][2]
cat(colnames(df[i,k]),"\n")
break
}
}
}
}
df$start_day <- paste(df$sinryonengetu,df$start_day,sep = "")
df$end_day   <- paste(df$sinryonengetu,df$end_day,sep = "")
return(df)
}
t <- change_format(kaisu2)
t
#------kaisu01→01　kaisu02→02に変換する
change_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について 月ごとのStartdayを特定
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
#列について 月ごとのEnddayを特定
for (k in 7:3) {
if (df[i,k]==1) {
df$end_day[i]<- strsplit(colnames(df[i,k]),"su")[[1]][2]
cat(colnames(df[i,k]),"\n")
break
}
}
}
}
df$start_day <- paste(df$sinryonengetu,df$start_day,sep = "")
df$end_day   <- paste(df$sinryonengetu,df$end_day,sep = "")
return(df)
}
t <- change_format(kaisu2)
t
#ID,sinryonengetuがユニークになっている(kaisuが日ごとに足されているデータ)
#------kaisu01→01　kaisu02→02に変換する
change_format <- function(df) {
library(dplyr)
#kaisu01の列数と、kaisu31の列数を取得
index_s <- grep("kaisu01",colnames(df),perl=T)
index_e <- grep("kaisu05",colnames(df),perl=T)
#開始日、終了日の変数を追加
df <- df%>%mutate(start_day="")
df <- df%>%mutate(end_day="")
#kaisu01~kaisu30の間で、最初に1の所を取得
#行について
for (i in 1:nrow(df)) {
cat(i,"行目です","\n")
#列について 月ごとのStartdayを特定
for (j in index_s:index_e){
if (df[i,j]==1) {
df$start_day[i]<- strsplit(colnames(df[i,j]),"su")[[1]][2]
cat(colnames(df[i,j]),"\n")
break
}
}
#列について 月ごとのEnddayを特定
for (k in index_e:index_s) {
if (df[i,k]==1) {
df$end_day[i]<- strsplit(colnames(df[i,k]),"su")[[1]][2]
cat(colnames(df[i,k]),"\n")
break
}
}
}
df$start_day <- paste(df$sinryonengetu,df$start_day,sep = "")
df$end_day   <- paste(df$sinryonengetu,df$end_day,sep = "")
return(df)
}
t <- change_format(kaisu2)
t
kaisu2
kaisu2
data(indon)
install.packages(DPpackage)
install.packages(indon)
install.packages("indon")
install.packages('indon')
install.packages('DPpackage')
data(indon)
library(DPpackage)
data(indon)
head(indon)
data(indon)
library(DPpackage)
head(indon)
data(indon)
head(indon)
library(dplyr)
head(indon,20)
help(arma)
x1_ma <- arma.sim(n=300,list(ma=1,ar=1))
library(base)
x1_ma <- arma.sim(n=300,list(ma=1,ar=1))
#-------------------------------
x1_ma <- arima.sim(n=300,order=c(1,0,1))
library(tseries)
install.packages(tseries)
install.packages("tseries")
install.packages("tseries")
library(tseries)
install.packages(tseries)
#-------------------------------
x1_ma <- arima.sim(n=300,order=c(1,0,1))
arima.sim()
help(arima.sim())
Library(Matching)
library(Matching)
lalonde
treat
lalonde$treat
logit.ps <- glm(treat~age+educ+black+hisp+married+nodegr+re74+re75+u74+u75,
family=binomial, data=lalonde)
ps       <- logit.ps$fitted
summary(logit.ps)
logit.ps <- glm(fomula = treat~age+educ+black+hisp+married+nodegr+re74+re75+u74+u75,
family=binomial, data=lalonde)
lalonde$treat
ps.reg <- lm(lalonde$re78~lalonde$treat+ps)
summary(ps.reg)
y  <- lalonde$re78
z1 <- lalonde$treat
(ipwe1 <- sum((z1*y)/ps)/sum(z1/ps))
(ipwe0 <- sum(((1-z1)*y)/(1-ps))/sum((1-z1)/(1-ps)))
ipwe <- function(data, target, treat, ps) {
y         <- as.matrix(data[target])[,]
z1        <- as.matrix(data[treat])[,]
z2        <- 1-z1
z         <- cbind(z1, z2)
ipw1      <- (z1/ps)/(length(z1)/sum(z1))
ipw2      <- (z2/(1-ps))/(length(z2)/sum(z2))
ipw       <- ipw1+ipw2
ipw12.reg <- lm(y~z-1, data=data, weights=ipw)
return(ipw12.reg)
}
ret <- ipwe(lalonde, "re78", "treat", ps)
ret
setwd("~/Desktop/Notebooks/HelloShiny")
library(runApp)
library(shiny)
runApp("upload")
runApp("upload")
runApp("upload")
